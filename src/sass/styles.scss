@import "~bulma/sass/utilities/initial-variables";
// Config vars
$primary: #1555a8;
$primary-invert: #fff;
$body-color: #333;
$black: #2b2523;

$color-secondary: #ff5964;
$color-background: #f7f7f7;

@import "~bulma";

/// Replace `$search` with `$replace` in `$string`
/// see: https://css-tricks.com/snippets/sass/str-replace-function/
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

// This is to get the color variable inserted in an inline svg,
// we have to strip the `#` and replace with %23 for #HEX notation, or
// remove spaces and replace `,` with %2C for rgba() notation.
@function vf-url-friendly-color($color) {
  @if type-of($color) != "color" {
    @warn '#{$color} is not a color.';
    @return $color;
  } @else {
    @return str-replace(
      str-replace(str-replace("#{$color}", "#", "%23"), ",", "%2C"),
      " "
    );
  }
}

// Import the framework
// @import "node_modules/vanilla-framework/scss/vanilla";

// Include vanilla patterns
// @include vf-base;
// @include vf-p-grid;
// @include vf-p-strip;
// @include vf-p-icons;
// @include vf-p-headings;
// @include vf-u-layout;
// @include vf-u-hide;
// @include vf-u-align;
// @include vf-u-margin-collapse;
// @include vf-u-padding-collapse;

// color variables
// $color-primary: #1555a8;
// $color-secondary: #ff5964;
// $color-accent: #23ce6b;
// $color-background: #fff; // dark #1c1c1c
// $color-light: #f7f7f7;

// https://fonts.google.com/specimen/Poppins
// @import url("https://fonts.googleapis.com/css?family=Poppins:300,500");

// html {
//   font-family: "Poppins", Helvetica, sans-serif;
//   // font-family:  Helvetica, sans-serif;
// }

// @import "button";
// @include button;

@import "card";
@include card;

// @import "footer";
// @include footer;

// @import "link";
// @include link;

@import "icons";
@include icons;

@import "table";
@include table;

@import "blog";
@include blog;

@import "navigation";
@include navigation;

@import "list";
@include list;

.main {
  background-color: $color-background;
  display: grid;
  grid-template-columns: minmax(0, 1fr);
  grid-template-rows: auto 1fr auto;
  min-height: 100vh;
}

.required-legend {
  font-size: small;
  margin-bottom: 0;
  padding: 0;

  &::before {
    color: #c7162b;
    content: "*";
    position: relative;
    right: 0.25rem;
  }
}

label {
  font-weight: 500;

  &.is-required::after {
    color: #c7162b;
    content: "*";
    left: 0.25rem;
    position: relative;
  }
}

.section.has-image {
  background-image: linear-gradient(
      to top,
      rgba(94, 94, 94, 0.5) 0%,
      rgba(94, 94, 94, 0.5) 100%
    ),
    url("/img/wallpaper-lg.jpg");
  background-position: top;
  background-repeat: no-repeat;
  background-size: cover;
  min-height: 35rem;

  @media screen and (max-width: $tablet){
    background-image: linear-gradient(
      to top,
      rgba(94, 94, 94, 0.5) 0%,
      rgba(94, 94, 94, 0.5) 100%
    ),
    url("/img/wallpaper-md.jpg");
  }
}

.flip-text__container {
  display: flex;

  .flip-text {
    overflow: hidden;
    height: 3.5rem;

    ul {
      list-style: none;
      padding: 0;
      margin: 0;

      li {
        height: 3rem;
        display: block;
        padding: 0 0 0 10px;
        margin-block-end: 3rem;
      }
    }

    .flip4 {
      animation: flip4 10s cubic-bezier(0.23, 1, 0.32, 1.2) infinite;
    }

    @keyframes flip4 {
      0% {
        margin-top: -24rem;
      }
      5% {
        margin-top: -18rem;
      }
      25% {
        margin-top: -18rem;
      }
      30% {
        margin-top: -12rem;
      }
      50% {
        margin-top: -12rem;
      }
      55% {
        margin-top: -6rem;
      }
      75% {
        margin-top: -6rem;
      }
      80% {
        margin-top: 0;
      }
      99.99% {
        margin-top: 0;
      }
      100% {
        margin-top: -18rem;
      }
    }
  }
}

p {
  max-width: 40rem;
}

.is-slanted--left {
  @media screen and (min-width: $tablet) {
    clip-path: polygon(0 0, 100% 0%, 100% 100%, 0 90%);
  }
}

.is-slanted--right {
  @media screen and (min-width: $tablet) {
    clip-path: polygon(0 0, 100% 0%, 100% 90%, 0 100%);
  }
}

.has-line {
  @media screen and (min-width: $tablet) {
    position: relative;

    &::after {
      content: "";
      background-color: #f7f7f7;
      position: absolute;
      bottom: -0.75rem;
      left: 0;
      height: 1px;
      width: 40rem;
    }
  }
}

.u-vertically-center {
  align-items: center !important;
  display: grid;
  justify-content: flex-start;

  > img {
    align-self: center !important;
  }
}

.has-text-centered--desktop {
  @media screen and (min-width: $desktop) {
    text-align: center;
  }
}

.grid {
  display: grid;
  grid-template-rows: auto;
  grid-column-start: auto;
  width: 100%;
  grid-gap: 1rem;
  grid-template-columns: repeat(12, minmax(0, 1fr));

  .col-4 {
    display: flex;
    grid-column-end: span 3;
    @media (max-width: $widescreen) and (min-width: $tablet + 1px) {
      grid-column-end: span 4;
    }
    @media (max-width: $tablet) and (min-width: 481px) {
      grid-column-end: span 6;
    }
    @media (max-width: 480px) {
      grid-column-end: span 12;
    }
  }
}

.p-form {
  display: grid;
  grid-template-rows: auto;
  grid-column-start: auto;
  width: 100%;
  grid-gap: 1rem;
  grid-template-columns: repeat(12, minmax(0, 1fr));

  .col-2 {
    grid-column-end: span 3;
    display: flex;
    justify-content: space-between;

    @media (min-width: 501px) and (max-width: 750px) {
      grid-column-end: span 6;
    }

    @media (max-width: 500px) {
      grid-column-end: span 12;
    }
  }

  label {
    font-weight: 300;
    margin-inline-end: 1rem;
  }

  input {
    max-width: 8rem;
  }
}
